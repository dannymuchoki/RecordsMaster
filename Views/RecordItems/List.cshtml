@model RecordsMaster.Utilities.PaginatedList<RecordsMaster.Models.RecordItemModel>

@{
    ViewData["Title"] = "Record Items";
}

@if (!User.IsInRole("Admin"))
{
    <p>Access Denied</p>
}
else
{
    <h1>Records</h1>
    <div class="form-group mt-3">
        <label for="filterDropdown">Filter Records:</label>
        <select id="filterDropdown" class="form-control">
            <option value="all">All</option>
            <option value="checkedOut">Checked Out Only</option>
        </select>
    </div>

    <div id="recordsContainer">
        @await Html.PartialAsync("_RecordsTable", Model)
    </div>

    <!-- Pagination controls -->
    <div id="paginationControls">
        @if (Model.TotalPages > 1)
        {
            <nav>
                <ul class="pagination">
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link" 
                           asp-route-pageNumber="@(Model.PageIndex - 1)" 
                           aria-disabled="@(Model.HasPreviousPage ? "false" : "true")">
                           Previous
                        </a>
                    </li>

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a class="page-link" asp-route-pageNumber="@i">@i</a>
                        </li>
                    }

                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link" 
                           asp-route-pageNumber="@(Model.PageIndex + 1)" 
                           aria-disabled="@(Model.HasNextPage ? "false" : "true")">
                           Next
                        </a>
                    </li>
                </ul>
            </nav>
        }
    </div>
    <div id='downloadCsv'> 
        <form asp-action="DownloadCsv" asp-controller="RecordItems" method="post" style="display:inline;">
        <button type="submit" name="download" value="download" class="btn btn-sm btn-primary">Download All</button>
    </form>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var filterDropdown = document.getElementById('filterDropdown');
            var recordsContainer = document.getElementById('recordsContainer');
            var paginationControls = document.getElementById('paginationControls');
            var downloadCsvDiv = document.getElementById('downloadCsv');

            filterDropdown.addEventListener('change', function () {
                var filter = filterDropdown.value;
                var xhr = new XMLHttpRequest();

                xhr.open('GET', '@Url.Action("GetCheckedOutRecords", "RecordItems")?filter=' + filter, true);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {
                        recordsContainer.innerHTML = xhr.responseText;

                        // Hide pagination controls and download csv when filtering.-- 
                        if (filter === "checkedOut") {
                            paginationControls.style.display = 'none';
                            downloadCsvDiv.style.display = 'none';
                        } else {
                            paginationControls.style.display = 'block';
                            downloadCsvDiv.style.display = 'block';
                        }
                    }
                };

                xhr.send();
            });
        });
    </script>
}